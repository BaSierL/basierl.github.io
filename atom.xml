<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://basierl.github.io</id>
    <title>Auroot - Blog</title>
    <updated>2020-07-06T09:03:31.446Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://basierl.github.io"/>
    <link rel="self" href="https://basierl.github.io/atom.xml"/>
    <subtitle>小鹿史记</subtitle>
    <logo>https://basierl.github.io/images/avatar.png</logo>
    <icon>https://basierl.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Auroot - Blog</rights>
    <entry>
        <title type="html"><![CDATA[Arch Linux 安装😇]]></title>
        <id>https://basierl.github.io/post/arch-install/</id>
        <link href="https://basierl.github.io/post/arch-install/">
        </link>
        <updated>2020-03-06T11:10:37.000Z</updated>
        <content type="html"><![CDATA[<h1 id="arch-linux-desktop-攻略">Arch Linux + Desktop 攻略</h1>
<h2 id="免指令脚本"><strong>免指令脚本</strong></h2>
<p><a href="https://www.bilibili.com/video/av88989589">Bilibili - 详细视频讲解</a></p>
<pre><code class="language-shell">wget archfi.sf.net/archfi    # 获取archfi​
chmod +x archfi              # 增加脚本的可执行权限​
./archfi                     # 运行脚本​
</code></pre>
<h2 id="安装步骤"><strong>安装步骤：</strong></h2>
<p><a href="https://wiki.archlinux.org/index.php/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">ArchLinux_Wiki - 安装教程</a></p>
<h3 id="一-验证启动模式">一、验证启动模式</h3>
<pre><code class="language-shell">[auroot@Archlinux ~]# ls /sys/firmware/efi/efivars
</code></pre>
<h3 id="二-检查网络">二、检查网络</h3>
<p><a href="https://wiki.archlinux.org/index.php/Network_configuration_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">ArchLinux_Wiki - Network</a></p>
<pre><code class="language-Shell">ip link                     #查看网卡设备
ip link set [网卡] up       #开启网卡设备
systemctl start dhcpcd      #开启DHCP服务
wifi-menu                   #连接wifi
</code></pre>
<h3 id="三-配置-mirrort">三、配置 Mirrort</h3>
<pre><code class="language-shell">** 阿里云源
sed -i &quot;6i Server = http://mirrors.aliyun.com/archlinux/\$repo/os/\$arch&quot; /etc/pacman.d/mirrorlist
** 网易云163 **
sed -i &quot;6i Server = https://mirrors.163.com/archlinux/\$repo/os/\$arch&quot; /etc/pacman.d/mirrorlist
** 清华大学
sed -i &quot;6i Server = https://mirrors.tuna.tsinghua.edu.cn/archlinux/\$repo/os/\$arch&quot; /etc/pacman.d/mirrorlist

更新一下
sudo pacman -Sy
</code></pre>
<h3 id="四-磁盘分区">四、磁盘分区</h3>
<p><strong>分区命令</strong><br>
<a href="https://wiki.archlinux.org/index.php/Fdisk_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">ArchLinux_Wiki - fdisk(分区工具)</a></p>
<pre><code class="language-shell">cfdisk /dev/sda  # 指定磁盘
</code></pre>
<p><strong>格式化命令</strong><br>
<a href="https://wiki.archlinux.org/index.php/File_systems_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">ArchLinux_Wiki - File systems</a></p>
<pre><code class="language-shell">mkfs.vfat  /dev/sda[0-9]   # efi/esp  fat32  # 指定分区
mkfs.ext4 /dev/sda[0-9]    # ext4     # 指定分区
mkfs.ext3 /dev/sda[0-9]    # ext3     # 指定分区
mkswap /dev/sda[0-9]       # swap     # 指定分区
  
</code></pre>
<h3 id="五-挂载分区">五、挂载分区</h3>
<pre><code class="language-shell">swapon /dev/sd[a-z][0-9]         # 挂着swap 卸载:swapoff
mount /dev/sd[a-z][0-9] /mnt     # 挂着根目录
mkdir -p /mnt/boot/EFI           # 创建efi引导目录
mount /dev/sda1 /mnt/boot/EFI    # 挂着efi分区
</code></pre>
<h3 id="六-安装系统">六、安装系统</h3>
<pre><code class="language-shell">pacstrap /mnt base base-devel linux linux-firmware ntfs-3g networkmanager os-prober net-tools
</code></pre>
<pre><code class="language-shell">genfstab -U /mnt &gt;&gt; /mnt/etc/fstab     # 创建fstab分区表，记得检查
arch-chroot /mnt /bin/bash             # chroot 进入创建好的系统
</code></pre>
<h3 id="七-配置系统">七、配置系统</h3>
<p><strong>设置时区</strong></p>
<pre><code class="language-shell">ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime     # 上海

hwclock --systohc       #运行 hwclock 以生成 /etc/adjtime
</code></pre>
<p><strong>本地化</strong></p>
<pre><code class="language-shell">sed  -i &quot;24i en_US.UTF-8 UTF-8&quot; /etc/locale.gen
sed  -i &quot;24i zh_CN.UTF-8 UTF-8&quot; /etc/locale.gen

locale-gen             # 生成 locale
</code></pre>
<p><strong>系统语言</strong></p>
<pre><code class="language-shell">echo &quot;LANG=en_US.UTF-8&quot; &gt; /etc/locale.conf       # 英文
echo &quot;LANG=zh_CN.UTF-8&quot; &gt; /etc/locale.conf       # 中文
</code></pre>
<p><strong>字体</strong></p>
<pre><code class="language-shell">sudo pacman -S wqy-microhei wqy-zenhei ttf-dejavu
</code></pre>
<p><strong>主机名</strong></p>
<pre><code class="language-shell">echo &quot;Archlinux&quot; &gt; /etc/hostname  #主机名
passwd                 #给root设置密码
mkinitcpio -p linux    
</code></pre>
<p><strong>创建用户</strong></p>
<pre><code class="language-shell">useradd -m -g users -G wheel -s /bin/bash 用户名

passwd 用户名           #给用户设置密码
</code></pre>
<p>需要开启的服务:</p>
<pre><code class="language-shell">systemctl enable NetworkManager    #网络服务,不开没网
systemctl start NetworkManager

systemctl enable sshd.service      #SSH远程服务,随意
systemctl start sshd.service
</code></pre>
<p><strong>配置GRUB</strong><br>
<a href="https://wiki.archlinux.org/index.php/GRUB_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">ArchLinux_Wiki - GRUB</a></p>
<p>执行passwd 给root设置一个密码。<br>
安装grub工具，到这一步，一定要看清楚。</p>
<pre><code class="language-shell">pacman -S vim grub efibootmgr
# 最后
grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=Archlinux
grub-mkconfig -o /boot/grub/grub.cfg
</code></pre>
<h3 id="弄完重启">弄完重启</h3>
<pre><code class="language-shell">exit
swapoff /dev/sd[a-z][0-9]      #卸载swap
umount -R /mnt &amp;&amp; reboot now   #卸载 根分区、efi分区
</code></pre>
<hr>
<h2 id="安装驱动">安装驱动</h2>
<p><strong>intel 显示驱动</strong><br>
<a href="https://wiki.archlinux.org/index.php/Intel_graphics_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">ArchLinux_Wiki - Intel显卡</a></p>
<pre><code class="language-shell">pacman -S xf86-video-intel mesa-libgl libva-intel-driver libvdpau-va-gl
</code></pre>
<p><strong>触摸板驱动</strong></p>
<pre><code class="language-shell">sudo pacman -S xf86-input-libinput xf86-input-synaptics 
</code></pre>
<p><strong>蓝牙</strong><br>
<a href="https://wiki.archlinux.org/index.php/Bluetooth_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">ArchLinux_Wiki - 蓝牙</a></p>
<pre><code class="language-shell">sudo pacman -S bluez bluez-utils blueman  bluedevil

sudo systemctl start bluetooth.service
sudo systemctl enable bluetooth.service
</code></pre>
<p><strong>音频</strong></p>
<pre><code class="language-shell">sudo pacman -S pulseaudio-bluetooth alsa-utils
sudo vim /etc/pulse/system.pa

load-module module-bluetooth-policy
load-module module-bluetooth-discover
</code></pre>
<ul>
<li>所有Video 驱动:</li>
</ul>
<pre><code class="language-shell">xf86-video-amdgpu                   
xf86-video-ati                      
xf86-video-dummy                    
xf86-video-fbdev                    
xf86-video-intel                    
xf86-video-nouveau                  
xf86-video-openchrome               
xf86-video-sisusb                   
xf86-video-vesa                     
xf86-video-vmware                   
xf86-video-voodoo                   
xf86-video-qxl
</code></pre>
<p><strong>安装I\O驱动</strong></p>
<pre><code class="language-shell">sudo pacman -S xf86-input-keyboard xf86-input-mouse xf86-input-synaptics
</code></pre>
<ul>
<li>其他I\O驱动</li>
</ul>
<pre><code class="language-shell">xf86-input-elographics                     
xf86-input-evdev                           
xf86-input-libinput                        
xf86-input-synaptics    
xf86-input-vmmouse      (VMWare)           
xf86-input-void                            
xf86-input-wacom                           
</code></pre>
<h4 id="打印机驱动"><strong>打印机驱动</strong></h4>
<p><a href="https://wiki.archlinux.org/index.php/CUPS_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">ArchLinux_Wiki - CUPS</a></p>
<p>CUPS 是苹果公司为Mac OS® X 和其他类 UNIX® 的操作系统开发的基于标准的、开源的打印系统.<br>
首先要安装这5个包<code>sudo pacman -S cups ghostscript gsfonts gutenprint cups-usblp</code></p>
<ul>
<li><code>samba</code>        如果系统用的 Samba 使用网络打印机，或者要作为打印服务器向其它windows客户端提供服务，你还需要安装</li>
<li><code>cups</code>         就是传说中的CUPS软件```</li>
<li><code>ghostscript</code>  Postscript语言的解释器```</li>
<li><code>gsfonts</code>      Ghostscript标准Type1字体```</li>
<li><code>hpoj</code>         HP Officejet, 你应该再安装这个包```</li>
</ul>
<h3 id="手机文件系统支持"><strong>手机文件系统支持</strong></h3>
<pre><code class="language-shell">sudo pacman -S mtpaint mtpfs libmtp 
Gnome ： gvfs-mtp 
Kde ：kio-extras
</code></pre>
<hr>
<h2 id="nvidia-显示驱动"><strong>Nvidia 显示驱动</strong></h2>
<ul>
<li>
<p><a href="https://github.com/dglt1">Optimus-switch - 解决方案</a></p>
</li>
<li>
<p><a href="https://github.com/Shatur95/optimus-manager-qt">Optimus-manager-qt - 解决方案(自用推荐)</a></p>
</li>
<li>
<p>可能需要开启AUR源</p>
</li>
<li>
<p>可能需要开启软件源 [multilib]</p>
</li>
</ul>
<pre><code class="language-shell">sudo rm -f /etc/X11/xorg.conf
sudo rm -f /etc/X11/xorg.conf.d/90-mhwd.conf
sudo systemctl disable bumblebeed.service   #如果正在使用bumblebee,请禁用守护进程

# gdm管理器
yaourt -S gdm-prime         
sudo vim /etc/gdm/custom.conf
    #WaylandEnable=false        前面的#去掉 Gnomoe的显示管理器就是gdm(Gnome xorg模式)

# sddm管理器
sudo vim /etc/sddm.conf     
    DisplayCommand              #找到这行，注释#
    DisplayStopCommand          #找到这行，注释#

#安装NVidia及主程序
sudo pacman -S nvidia nvidia-utils opencl-nvidia lib32-nvidia-utils lib32-opencl-nvidia mesa lib32-mesa-libgl xf86-video-intel
sudo pacman -S optimus-manager optimus-manager-qt   #安装optimus-manager

sudo systemctl enable optimus-manager.service       #开启进程 
</code></pre>
<hr>
<p><strong>查看n卡的BusID</strong></p>
<pre><code class="language-shell">lspci | egrep 'VGA|3D'
出现如下格式：
----------------------------------------------------------------------
00:02.0 VGA compatible controller: Intel Corporation UHD Graphics 630 (Desktop)
01:00.0 VGA compatible controller: NVIDIA Corporation GP107M [GeForce GTX 1050 Ti Mobile] (rev a1)
————————————————
</code></pre>
<p><strong>解决画面撕裂问题</strong></p>
<pre><code class="language-shell"> vim /etc/mkinitcpio.conf
----------------------------------------------------------------------
MODULES=(nvidia nvidia_modeset nvidia_uvm nvidia_drm)
----------------------------------------------------------------------

vim /etc/default/grub                                              # 此处必须是grub引导，其他引导自行百度
----------------------------------------------------------------------
GRUB_CMDLINE_LINUX_DEFAULT=&quot;quiet nvidia-drm.modeset=1&quot;               #此处加nvidia-drm.modeset=1参数
----------------------------------------------------------------------

grub-mkconfig -o /boot/grub/grub.cfg                           
</code></pre>
<p><strong>nvidia升级时自动更新initramfs</strong></p>
<pre><code class="language-shell">sudo mkdir /etc/pacman.d/hooks
sudo vim /etc/pacman.d/hooks/nvidia.hook
-----------------------------------------------------------------
[Trigger]
Operation=Install
Operation=Upgrade
Operation=Remove
Type=Package
Target=nvidia
Target=linux
# Change the linux part above and in the Exec line if a different kernel is used

[Action]
Description=Update Nvidia module in initcpio
Depends=mkinitcpio
When=PostTransaction
NeedsTargets
Exec=/bin/sh -c 'while read -r trg; do case $trg in linux) exit 0; esac; done; /usr/bin/mkinitcpio -P'
</code></pre>
<p><strong>安装测试软件  在图形界面下</strong></p>
<pre><code class="language-shell">sudo pacman -S virtualgl
optirun glxspheres64

#查看NVIDIA显卡是否已经启动
nvidia-smi
</code></pre>
<h2 id="以下可不用加入配置"><strong>以下可不用加入配置</strong></h2>
<p><strong>SDDM</strong></p>
<pre><code class="language-shell">vim /usr/share/sddm/scripts/Xsetup
----------------------------------------------------------------------
xrandr --setprovideroutputsource modesetting NVIDIA-0
xrandr --auto
</code></pre>
<p><strong>GDM</strong></p>
<pre><code class="language-shell">创建两个桌面文件
sudo mkdir /usr/share/gdm/greeter/autostart/optimus.desktop
sudo mkdir /etc/xdg/autostart/optimus.desktop
----------------------------------------------------------------------
[Desktop Entry]
Type=Application
Name=Optimus
Exec=sh -c &quot;xrandr --setprovideroutputsource modesetting NVIDIA-0; xrandr --auto&quot;
NoDisplay=true
X-GNOME-Autostart-Phase=DisplayServer
</code></pre>
<p><strong>修改配置文件</strong></p>
<pre><code class="language-shell">vim /etc/X11/xorg.conf
----------------------------------------------------------------------
Section &quot;Module&quot;                                                      
    load &quot;modesetting&quot;
EndSection

Section &quot;Device&quot;
    Identifier     &quot;Device0&quot;
    Driver         &quot;nvidia&quot;
    VendorName     &quot;NVIDIA Corporation&quot;
    BusID          &quot;1:0:0&quot;                                            #此处填刚刚查询到的BusID
    Option         &quot;AllowEmptyInitialConfiguration&quot;
EndSection
</code></pre>
<hr> 
<h1 id="deepin-桌面安装">Deepin 桌面安装</h1>
<figure data-type="image" tabindex="1"><img src="https://images.gitee.com/uploads/images/2020/0216/212915_593e4787_5700645.jpeg" alt="Image text" loading="lazy"></figure>
<h4 id="安装桌面"><strong>安装桌面</strong></h4>
<p><a href="https://wiki.archlinux.org/index.php/Deepin_Desktop_Environment_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">ArchLinux_Wiki - DEEPIN</a></p>
<pre><code class="language-shell">sudo pacman -S xorg xorg-server xorg-xinit mesa deepin deepin-extra lightdm

vim /etc/lightdm/lightdm.conf

  greeter-session=example-gtk-gnome       # 用VIM 找到这个
  
  greeter-session=lightdm-deepin-greeter  # 替换为这个

sudo systemctl enable lightdm             # 加入开机自启

vim /etc/X11/xinit/xinitrc  # 配置这个文件

  exec startdde     # 添加这个
  
cp /etc/X11/xinit/xinitrc /home/用户名/.xinitrc

systemctl start lightdm     # 开启桌面 
</code></pre>
<hr>
<h1 id="kde-桌面">Kde 桌面</h1>
<figure data-type="image" tabindex="2"><img src="https://images.gitee.com/uploads/images/2020/0302/152309_29015fac_5700645.jpeg" alt="Image KDE_Desktop" title="kde.jpg" loading="lazy"></figure>
<h3 id="安装桌面-2"><strong>安装桌面</strong></h3>
<p><a href="https://wiki.archlinux.org/index.php/KDE_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">ArchLinux_Wiki - KDE</a></p>
<pre><code class="language-shell">sudo pacman -S sddm sddm-kcm plasma xorg xorg-server xorg-xinit mesa     # 安装软件包 

sudo pacman -S plasma-desktop plasma-meta   # 完整桌面，软件自己安装
sudo pacman -S kde-applications-meta        # 全部加游戏，什么都有，臃肿
sudo systemctl enable sddm          # 加入开机自启 
    echo &quot;exec startkde&quot; &gt;&gt; /etc/X11/xinit/xinitrc  
    cp /etc/X11/xinit/xinitrc $HOME/.xinitrc

sudo pacman -S konsole               # KDE终端
</code></pre>
<hr>
<h1 id="gnome-桌面">Gnome 桌面</h1>
<figure data-type="image" tabindex="3"><img src="https://images.gitee.com/uploads/images/2020/0302/152750_9d75eb84_5700645.png" alt="Image Gnome_Desktop" title="desktop_8t.png" loading="lazy"></figure>
<h3 id="安装桌面-3"><strong>安装桌面</strong></h3>
<p><a href="https://wiki.archlinux.org/index.php/GNOME_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">ArchLinux_Wiki - GNOME</a></p>
<pre><code class="language-shell">gnome-extra 额外包，可不装。
sudo pacman -S xorg xorg-server xorg-xinit mesa gnome gdm
    sudo systemctl enable gdm 
    echo &quot;exec gnome=session&quot; &gt;&gt; /etc/X11/xinit/xinitrc
    cp /etc/X11/xinit/xinitrc $HOME/.xinitrc
</code></pre>
<p>进入登录界面后，设置为以 GNOME no Xorg模式登入（推荐）</p>
<pre><code class="language-shell">美化地址：https://www.pling.com/s/Gnome
         https://www.opencode.net/explore/projects
安装插件需要的软件：
sudo pacman -S gnome-tweaks gnome-shell-extensions
</code></pre>
<p><strong>插件</strong></p>
<pre><code class="language-shell">Arch Linux Updates Indicator    archlinux软件更新检测插件,需要配合pacman-contrib使用
Caffeine                                 防止自动挂起
Clipboard Indicator              一个剪贴板
Coverflow Alt-Tab                更好的窗口切换
Dash to Dock                        把dash栏变为一个dock
Dynamic Top Bar                  顶栏透明化
Extension Update Notifier    gnome插件更新提示
GnomeStatsPro                     一个系统监视器
system-monitor                    又一个系统监视器
Night Light Slider                 调节gnome夜间模式的亮度情况
OpenWeather                      天气插件
Proxy Switcher                     代理插件
Random Wallpaper              自动切换壁纸,
Simple net speed                            网速监测
Sound Input &amp; Output Device Chooser    声音设备选择
Status Area Horizontal Spacing      让顶栏更紧凑
Suspend Button                              添加一个休眠按钮
TopIcons Plus                                 把托盘图标放到顶栏
Window Is Ready - Notification Remover      去除烦人的window is ready提醒
</code></pre>
<hr>
<h2 id="aur源-backarch源">Aur源 \ Backarch源</h2>
<h6 id="archlinux_wiki-aur安装"><strong><a href="https://wiki.archlinux.org/index.php/AUR_helpers_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">ArchLinux_Wiki - AUR安装</a></strong></h6>
<h6 id="aur工具-yay"><strong><a href="https://github.com/Jguer/yay">AUR工具 - yay</a></strong></h6>
<h6 id="科学上网-electron-ssr"><strong><a href="https://gitee.com/auroot/arch_wiki/releases/electron-ssr">科学上网 - electron-ssr</a></strong></h6>
<ul>
<li>
<h3 id="中科大">中科大</h3>
</li>
</ul>
<pre><code class="language-shell">echo '' &gt;&gt; /etc/pacman.conf
echo '[archlinuxcn]' &gt;&gt; /etc/pacman.conf
echo 'SigLevel = Optional TrustedOnly' &gt;&gt; /etc/pacman.conf
echo 'Server = https://mirrors.ustc.edu.cn/archlinuxcn/$arch' &gt;&gt; /etc/pacman.conf
</code></pre>
<ul>
<li>
<h3 id="清华">清华</h3>
</li>
</ul>
<pre><code class="language-shell">echo '' &gt;&gt; /etc/pacman.conf
echo '[archlinuxcn]' &gt;&gt; /etc/pacman.conf
echo 'SigLevel = Optional TrustedOnly' &gt;&gt; /etc/pacman.conf
echo 'Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch' &gt;&gt; /etc/pacman.conf
</code></pre>
<ul>
<li>
<h3 id="163">163</h3>
</li>
</ul>
<pre><code class="language-shell">echo '' &gt;&gt; /etc/pacman.conf
echo '[archlinuxcn]' &gt;&gt; /etc/pacman.conf
echo 'SigLevel = Optional TrustedOnly' &gt;&gt; /etc/pacman.conf
echo 'Server = http://mirrors.163.com/archlinux-cn/$arch' &gt;&gt; /etc/pacman.conf
</code></pre>
<h3 id="blackarch">Blackarch</h3>
<ul>
<li>
<h3 id="清华-2">清华</h3>
</li>
</ul>
<pre><code class="language-shell">echo '' &gt;&gt; /etc/pacman.conf
echo '[blackarch]' &gt;&gt; /etc/pacman.conf
echo 'SigLevel = Optional TrustAll' &gt;&gt; /etc/pacman.conf
echo 'Server = https://mirrors.tuna.tsinghua.edu.cn/blackarch/$repo/os/$arch' &gt;&gt; /etc/pacman.conf
</code></pre>
<pre><code class="language-shell">    sudo pacman -Syu yaourt yay
    sudo pacman -Syu archlinuxcn-keyring
</code></pre>
<hr>
<h1 id="常用软件">常用软件</h1>
<pre><code class="language-shell">sudo pacman -S vim git wget zsh  dosfstools man-pages-zh_cn create_ap p7zip file-roller unrar neofetch openssh 

sudo pacman -S google-chrome        # 谷歌浏览器
sudo pacman -S firefox                      # 火狐浏览器
sudo pacman -S bash-complete        # 增强自动补全功能
sudo pacman -S xpdf                         # 安装pdf阅读器
sudo pacman -Sy yaourt                    # 另外一个包管理工具
sudo pacman -S cowsay                    # 牛的二进制图形（/usr/share/cows）
sudo yaourt -S vundle-git                 # 安装vim的插件管理器
sudo pacman -S deepin.com.qq.office	# TIM
sudo pacman -S deepin-movie         # 深度影院
sudo yaourt -S deepin-wechat          # 微信
sudo pacman -S netease-cloud-music  # 网易云音乐
sudo pacman -S iease-music          # 第三方网易云音乐
sudo pacman -S virtualbo               # virtualbox 虚拟机
sudo pacman -S vmware-workstation   # vmware 虚拟机
sudo pacman -S wps-office              # wps
sudo pacman -S remmina               # 好用远程工具

https://github.com/xtuJSer/CoCoMusic/releases   # QQ音乐  CoCoMusic

sudo mandb                          # 中文的man手册，更新关键词搜索需要的缓存
</code></pre>
<hr>
<p><strong>安装字体</strong><br>
<a href="https://wiki.archlinux.org/index.php/Fonts_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">ArchLinux_Wiki - 字体</a></p>
<ul>
<li>全部安装：</li>
</ul>
<pre><code class="language-shell">sudo pacman -S --needed font-bh-ttf font-bitstream-speedo gsfonts sdl_ttf \
ttf-bitstream-vera ttf-dejavu ttf-liberation xorg-fonts-type1 ttf-ms-fonts \
gnu-free-fonts noto-fonts ttf-bitstream-vera ttf-caladea ttf-carlito \
ttf-croscore ttf-dejavu ttf-hack ttf-junicode ttf-linux-libertine \
opendesktop-fonts ttf-anonymous-pro ttf-arphic-ukai ttf-arphic-uming \
ttf-baekmuk ttf-cascadia-code ttf-cormorant ttf-droid ttf-fantasque-sans-mono \
ttf-fira-code ttf-fira-mono ttf-fira-sans ttf-font-awesome ttf-hanazono \
ttf-hannom ttf-ibm-plex ttf-inconsolata ttf-indic-otf ttf-ionicons \
ttf-jetbrains-mono ttf-joypixels ttf-khmer ttf-lato ttf-liberation \
ttf-linux-libertine-g ttf-nerd-fonts-symbols ttf-opensans ttf-proggy-clean \
ttf-roboto ttf-roboto-mono ttf-sazanami ttf-tibetan-machine ttf-ubuntu-font-family
</code></pre>
<hr>
<h3 id="tim-kde"><strong>TIM - KDE</strong></h3>
<p><strong>1、安装TIM</strong></p>
<pre><code class="language-shell">sudo pacman -S deepin.com.qq.office 
</code></pre>
<p><strong>2、第二个包很重要</strong></p>
<pre><code class="language-shell">sudo pacman -S gnome-settings-daemon
</code></pre>
<p><strong>3、打开TIM，自启gsd-xsettings （推荐），只对TIM有效。</strong></p>
<pre><code class="language-shell">sudo vim /usr/share/applications/deepin.com.qq.office.desktop

注释： Exec=“/opt/deepinwine/apps/Deepin-TIM/run.sh” -u %u
加入：Exec=/usr/lib/gsd-xsettings || /opt/deepinwine/apps/Deepin-TIM/run.sh
</code></pre>
<hr>
<h3 id="sogou输入法"><strong>sogou输入法</strong></h3>
<p><a href="https://wiki.archlinux.org/index.php/Fcitx_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">ArchLinux_Wiki - Fcitx</a></p>
<ul>
<li>安装搜狗输入法及其依赖</li>
</ul>
<pre><code class="language-shell">sudo pacman -S yaourt
yaourt -S qtwebkit-bin
# 安装搜狗输入法及其依赖
sudo pacman -S fcitx fcitx-im fcitx-configtool fcitx-libpinyin kcm-fcitx fcitx-sogoupinyin
# 配置输入法的工具 -U参数是安装本地包.
 wget https://arch-archive.tuna.tsinghua.edu.cn/2019/04-29/community/os/x86_64/fcitx-qt4-4.2.9.6-1-x86_64.pkg.tar.xz  
sudo pacman -U fcitx-qt4-4.2.9.6-1-x86_64.pkg.tar.xz 
</code></pre>
<ul>
<li>配置环境 把下面的加入到`/.xporfile</li>
</ul>
<pre><code class="language-shell">sudo vim /etc/profile 
export GTK2_RC_FILES=&quot;$HOME/.gtkrc-2.0&quot;
export LC_CTYPE=zh_CN.UTF-8
export XMODIFIERS=@im=fcitx
export GTK_IM_MODULE=fcitx
export QT_IM_MODULE=fcitx
fcitx -d -r --enable sogou-qimpanel
</code></pre>
<pre><code class="language-shell">sudo vim /etc/environment
GTK_IM_MODULE=fcitx
QT_IM_MODULE=fcitx
XMODIFIERS=@im=fcitx

</code></pre>
<ul>
<li>终端运行qtconfig-qt4找到interface选项,在下面的Defult Input Method改为fcitx然后保存退出 source /etc/profile 重启。</li>
</ul>
<hr>
<h2 id="隐藏grub引导菜单">隐藏grub引导菜单</h2>
<p>如果使用了其他引导，可以隐藏linux的grub引导菜单，修改下面文件：</p>
<pre><code class="language-shell">sudo vim /etc/default/grub
</code></pre>
<pre><code class="language-shell">GRUB_DEFAULT=0
GRUB_HIDDEN_TIMEOUT=0
GRUB_HIDDEN_TIMEOUT_QUIET=true
GRUB_TIMEOUT=0
GRUB_DISTRIBUTOR=`lsb_release -i -s 2&gt; /dev/null || echo Debian`
GRUB_CMDLINE_LINUX_DEFAULT=&quot;quiet splash&quot;
GRUB_CMDLINE_LINUX=&quot;&quot;
GRUB_DISABLE_OS_PROBER=true
</code></pre>
<p>更新grub：</p>
<pre><code class="language-shell">sudo grub-mkconfig -o /boot/grub/grub.cfg
</code></pre>
<h2 id="refind-引导双系统">rEFInd 引导双系统</h2>
<p>如果你的电脑支持UEFI启动引导又嫌弃默认的启动界面丑，你可以使用rEFInd来管理你的启动项，推荐一个主题Minimal. 引导设置可参考rEFInd引导Win10+Ubuntu14双系统.<br>
我的启动界面截图：</p>
<pre><code>rEFInd：https://github.com/EvanPurkhiser/rEFInd-minimal
rEFInd引导Win10+Ubuntu：https://www.cnblogs.com/shishiteng/p/5760345.html
</code></pre>
<hr>
<h2 id="fstab配置文件">Fstab配置文件</h2>
<pre><code class="language-shell"># Static information about the filesystems.
# See fstab(5) for details.
# &lt;file system&gt; &lt;dir&gt; &lt;type&gt; &lt;options&gt; &lt;dump&gt; &lt;pass&gt;

# /dev/sdb2
UUID=ID     /               ext4        rw,relatime     0   1

# /dev/sdb1
UUID=ID     /boot/efi       vfat         rw,relatime,fmask=0022,dmask=0022,codepage=437,iocharset=iso8859-1,shortname=mixed,utf8,errors=remount-ro   0   2

# /dev/sdb3
UUID=ID     none            swap        defaults        0   0

#/dev/nvme0n1p2  Windows file ntfs 
UUID=ID     /mnt/c          ntfs,ntfs-3g        defaults,auto,uid=1000,gid=985,umask=002,iocharset=utf8     0   0
</code></pre>
<h3 id="virtualbox">VirtualBox</h3>
<ul>
<li>VirtualBox 拓展</li>
</ul>
<pre><code class="language-shell">sudo pacman -S virtualbox-guest-utils  (For Virtualbox)
</code></pre>
<h1 id="待续">待续....</h1>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://basierl.github.io/post/hello-gridea/</id>
        <link href="https://basierl.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>